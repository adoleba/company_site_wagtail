# Generated by Django 2.2.8 on 2020-04-16 12:10

from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
    ]

    operations = [
        migrations.CreateModel(
            name='UniversalPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('grey_header', wagtail.core.blocks.CharBlock(classname='grey_header')), ('white_header_with_button', wagtail.core.blocks.StreamBlock([('header_text', wagtail.core.blocks.CharBlock(classname='header text')), ('button_text', wagtail.core.blocks.CharBlock(classname='header text')), ('button_url', wagtail.core.blocks.PageChooserBlock(classname='internal url'))])), ('three_columns_with_headers', wagtail.core.blocks.StreamBlock([('column_no_1_header', wagtail.core.blocks.CharBlock(classname='header text column no 1')), ('column_no_1_text', wagtail.core.blocks.RichTextBlock(classname='text column no 1')), ('column_no_2_header', wagtail.core.blocks.CharBlock(classname='header text column no 2')), ('column_no_2_text', wagtail.core.blocks.RichTextBlock(classname='text column no 2')), ('column_no_3_header', wagtail.core.blocks.CharBlock(classname='header text column no 3')), ('column_no_3_text', wagtail.core.blocks.RichTextBlock(classname='text column no 3'))])), ('small_grey_header', wagtail.core.blocks.CharBlock(classname='small_grey_header')), ('faq', wagtail.core.blocks.StreamBlock([('question', wagtail.core.blocks.CharBlock(classname='question')), ('answer', wagtail.core.blocks.RichTextBlock(classname='answer'))])), ('blockquote', wagtail.core.blocks.CharBlock(classname='blockquote')), ('paragraph_with_header', wagtail.core.blocks.StreamBlock([('header_text', wagtail.core.blocks.RichTextBlock(classname='header text')), ('paragraph_text', wagtail.core.blocks.RichTextBlock(classname='paragraph text'))])), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('banner', wagtail.images.blocks.ImageChooserBlock(icon='image'))], blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
